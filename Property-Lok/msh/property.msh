db.property.drop();
db.createCollection('property', {
 validator: {
  $jsonSchema: {
   bsonType: "object",
   description: "version 1.2.4",
   required: ["MemberId", "PropertyName", "PropertyImages", "PropertySKU", "PropertyDescription",
    "OwnerFirstname", "OwnerLastname", "DescriptorCategory", "PropertyStorageCode",
    "PropertyStatus", "ProductTerm", "Common"],
   properties: {
    MemberId: {
     bsonType: "objectId",
     description: "MemberId is from the Members collectiond"
    },
    PropertyName: {
     bsonType: "string",
     minLength: 4,
     maxLength: 64,
     description: "PropertyName must be unique"
    },
    PropertyImages: {
     bsonType: "array",
     items: {
      bsonType: "string",
      minLength: 8,
      maxLength: 128,
      description: "Array of URLs"
     }
    },
    PropertySKU: {
     bsonType: "string",
     maxLength: 24,
     description: "PropertySKU is s system generated SKU"
    },
    Serial_VIN: {
     bsonType: "string",
     maxLength: 24,
     description: "Serial_VIN is user suppied"
    },
    Make_Manufacturer: {
     bsonType: "string",
     maxLength: 36,
     description: "Make_Manufacturer is user suppied"
    },
    ModelNumber: {
     bsonType: "string",
     maxLength: 24,
     description: "ModelNumber is user suppied"
    },
    PropertyDescription: {
     bsonType: "string",
     minLength: 5,
     maxLength: 1024,
     description: "PropertyDescription is user suppied"
    },
    OwnerFirstname: {
     bsonType: "string",
      minLength: 3,
     maxLength: 64,
     description: "OwnerFirstname is required"
    },
    OwnerLastname: {
     bsonType: "string",
     minLength: 3,
     maxLength: 128,
     description: "OwnerLastname is required"
    },
    PropertyStorageCode: {
     bsonType: "string",
     maxLength: 32,
     description: "PropertyStorageCode is a one-way hash, SHA-256, 32 Hex Bytes"
    },
    DescriptorCategory: {
     bsonType: "string",
     maxLength: 32,
     description: "Lookup from SYS_CATEGORIES"
    },
    PropertyGeolocation: {
     bsonType: "array",
     items: {
      bsonType: "double"
     },
     description: "PropertyGeolocation is an array with latitude, longitude"
    },
    AdditionalInformation: {
     bsonType: "string",
     maxLength: 1024,
     description: "AdditionalInformation User generated"
    },
    PurchaseDateLocation: {
     bsonType: "string",
     maxLength: 512,
     description: "PurchaseDate & Location User generated, perhaps concatenate a date() & location on entry?"
    },
    AppraisalOrPurchasePrice: {
     bsonType: "decimal",
     minimum: 0.0,
     maximum: 999999.99,
     description: "AppraisalOrPurchasePrice and is user generated"
    },
    PropertyStatus: {
     bsonType: "string",
     enum: ["Locked", "Stolen", "For Sale", "Transferred", "Recovered", "Unrecovered"],
     description: "Status is user generated and required"
    },
     SalesReceipt: {
     bsonType: "string",
     minLength: 8,
     maxLength: 128,
     description: "URL to sales receipt"
    },
    ProductTerm: {
     bsonType: "string",
     enum: ["Annual", "Upgrade"],
     description: "ProductTerm is an enum and is  requirede"
    },
    Template: {
     bsonType: "string",
     description: "Future"
    },
    Common: {
     bsonType:"object",
     required: ["Created", "CreatedBy", "Updated", "UpdatedBy", "Active"],
                    properties:{
      "Created": {
       "bsonType": "string",
       "description": "required"
      },
      "CreatedBy": {
       "bsonType": "string",
       "description": "required"
      },
      "Updated": {
       "bsonType": "string",
       "description": "required"
      },
      "UpdatedBy": {
       "bsonType": "string",
       "description": "required"
      },
      "Active": {
       "bsonType": "bool",
       "description": "Defaulted to TRUE"
      },
      "Notes": {
       "bsonType": "string",
       "maxLength": 512,
       "description": "Free-form text"
      }
     }
    }
   }
  }
 }
});
db.property.createIndex(
 {
  "PropertyName": 1
 },
 {
  unique: true
 }
);
db.property.createIndex(
 {
  "PropertySKU": 1
 },
 {
  unique: true
 }
);
db.property.createIndex(
 {
  "Description": 1
 }
);
db.property.createIndex(
 {
  "PropertyStorageCode": 1
 },
 {
  unique: true
 }
);
db.property.createIndex(
 {
  "PurchaseDateLocation": 1
 }
);
db.property.createIndex(
 {
  "AppraisalOrPurchasePrice": 1
 }
);
db.property.createIndex(
 {
  "PropertyStatus": 1
 }
);
db.property.insertOne(
 {
  MemberId: ObjectId("640914943bb567d97ab19e81"),
  PropertyName: "A property",
  PropertyImages: ["http://animage.com"],
  PropertySKU: "SKU1",
  Serial_VIN: "123abc2023",
  Make_Manufacturer: "Ford",
  ModelNumber: "Ranger",
  PropertyDescription: "A Red Ford Ranger",
  OwnerFirstname: "Gloria",
  OwnerLastname: "Rivera de Haro",
  PropertyStorageCode: "HASH OF Something",
  DescriptorCategory: "Art",
  PropertyGeolocation: [Double(20.65744), Double(-103.39393)],
  AdditionalInformation: "Not pretty",
  PurchaseDateLocation: "1/1/2023 Guadalajara",
  AppraisalOrPurchasePrice: NumberDecimal("9999.99"),
  PropertyStatus: "Locked",
   SalesReceipt: "http://salesreceipt.jpg",
  ProductTerm: "Annual",
  Common:
  {
   Created: "",
   CreatedBy: "DrewAnderson",
   Updated: "",
   UpdatedBy: "drewanderson",
   Active: true,
   Notes: "Test note"
  }
 }
);
db.property.find();
