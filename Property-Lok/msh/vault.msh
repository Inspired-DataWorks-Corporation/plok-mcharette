db.vault.drop();
db.createCollection('vault', {
 validator: {
  $jsonSchema: {
   bsonType: "object",
   description: "version 23/05/2023",
   required: ["PropertyStorageCode", "Files", "Metadata", "Thumbnails", "Geolocation",
    "aPropertyStatus", "PropertyStatus", "Common"],
   properties: {
    PropertyStorageCode: {
     bsonType: "string",
     minLength: 4,
     maxLength: 128,
     description: "PropertyStorageCode is a child of the myproperty collection PSC value generated there"
    },
    Files: {
     bsonType: "array",
     items: {
      bsonType: "string",
      minLength: 4,
      maxLength: 512,
      description: "URLs of this vaults asset Files in S3 bucket"
     }
    },
    Metadata: {
     bsonType: "array",
     items: {
      bsonType: "string",
      minLength: 4,
      maxLength: 512,
      description: "File Metadata array - join with Files array above ^^"
     }
    },
    Thumbnails: {
     bsonType: "array",
     items: {
      bsonType: "string",
      minLength: 4,
      maxLength: 512,
      description: "Vault Assets - Thumbnail Pics, Certificates, etc. Defaulted to an image representing the file type, but users can also upload their own images with the file"
     }
    },
    Geolocation: {
     bsonType: "string",
     maxLength: 128,
     description: "Geolocation is the location of the property when created and string formatted as latitude, longitude: One for each vault."
    },
    Tags: {
     bsonType: "array",
     items: {
      bsonType: "string",
      minLength: 4,
      maxLength: 512,
      description: "Array of tags"
     }
    },
    aPropertyStatus: {
     bsonType: "string",
     enum: ["Stored", "For Sale", "Lost","Stolen","Recovered"],
     description: "aPropertyStatus is required Limited to enum"
    },
    PurchaseDateLocation: {
     bsonType: "string",
     maxLength: 64,
    },
    AppraisalOrPurchasePrice: {
     bsonType: "number",
     minimum: 0.0,
     maximum: 999999.99
    },
    PropertyStatus: {
     bsonType: "string",
     enum: ["Stored", "Lost", "Stolen", "For Sale", "Transferred", "Recovered", "Unrecovered"],
     description: "aPropertyStatus is required Limited to enum"
    },
    SalesReceptURL: {
     bsonType: "string",
     minLength: 8,
     maxLength: 128
    },
    Common: {
     bsonType:"object",
     required: ["Created", "CreatedBy", "Updated", "UpdatedBy", "Active"],
                    properties:{
      "Created": {
       "bsonType": "string",
       "description": "required"
      },
      "CreatedBy": {
       "bsonType": "string",
       "description": "required"
      },
      "Updated": {
       "bsonType": "string",
       "description": "required"
      },
      "UpdatedBy": {
       "bsonType": "string",
       "description": "required"
      },
      "Active": {
       "bsonType": "bool",
       "description": "Defaulted to TRUE"
      },
      "Notes": {
       "bsonType": "string",
       "maxLength": 512,
       "description": "Free-form text"
      }
     }
    }
   }
  }
 }
});
db.vault.insertOne(
 {
  PropertyStorageCode: "HASH OF Something",
  Files: ["file 1", "File 2" ],
  Metadata: ["Meta 1", "Meta2"],
  Thumbnails: ["thumb1", "thumb2"],
  Geolocation: "20.65744, -103.39393",
  Tags: ["Tag 1", "Tag 2"],
  aPropertyStatus: "Lost",
  PurchaseDateLocation: "5/2/22 at home",
  AppraisalOrPurchasePrice: 50000,
  PropertyStatus: "Stored",
  salesReceiptURL: "a valid URL",
  Common:
  {
   Created: "",
   CreatedBy: "DrewAnderson",
   Updated: "",
   UpdatedBy: "drewanderson",
   Active: true,
   Notes: "Test note"
  }
 }
);
db.vault.find();
