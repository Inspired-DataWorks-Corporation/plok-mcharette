db.sysPricing.drop();
db.createCollection('sysPricing', {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			description: QUOTE(VERSION),
			required: ["ProductId", "Common"],
			properties: {
				ProductId: {
					bsonType: "objectId",
					description: "From the sys_product collection"
				},
				RegularPrice: {
					bsonType: "decimal",
					minimum: 0.0,
					maximum: 99999.99,
					description: "Regular pricing"
				},
				SalePrice: {
					bsonType: "decimal",
					minimum: 0.0,
					maximum: 99999.99,
					description: "Sale pricing"
				},
				SaleDateStart: {
					bsonType: "date",
					description: "Sale start"
				},
				SaleDateEnd: {
					bsonType: "date",
					description: "Sale end"
				},
				PromoCode: {
					bsonType: "string",
					maxLength: 12,
					description: "Promo Code"
				},
				PromoAmount: {
					bsonType: "decimal",
					minimum: 0.0,
					maximum: 99999.99,
					description: "Promo pricing"
				},
				TaxAmount: {
					bsonType: "decimal",
					minimum: 0.0,
					maximum: 99999.99,
					description: "Taxable amount pricing"
				},
				CurrencyType: {
					bsonType: "string",
					enum: ["USD", "CAD", "Peso", "AUD"],
					description: "Currency of the product"
				},
#include "CommonDef.inc"
			}
		}
	}
})
db.sysPricing.createIndex( 
	{
		"ProductId": 1
	},
	{
		unique: true
	}
);
db.sysPricing.createIndex( 
	{
		"SaleDateEnd": 1
	}
);
db.sysPricing.createIndex( 
	{
		"CurrencyType": 1
	}
);
db.sysPricing.insertOne(
	{
		ProductId: ObjectId("deadbeefdeadbeefdeadbeef"),
		RegularPrice: NumberDecimal("99999.99"),
		SalePrice: NumberDecimal("9999.99"),
		SaleDateStart: new Date(),
		SaleDateEnd: new Date(),
		PromoCode: "ABC",
		PromoAmount: NumberDecimal("99.99"),
		TaxAmount: NumberDecimal("9999.99"),
		CurrencyType: "USD",
		Keywords: ["Master", "Metrics", "Log"],
#include "CommonConst.inc"
	}
);
db.sysPricing.find();


