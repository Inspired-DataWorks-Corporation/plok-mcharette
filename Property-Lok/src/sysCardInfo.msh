db.sysCardInfo.drop();
db.createCollection('sysCardInfo', {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			description: QUOTE(VERSION),
			required: ["MemberID", "CardNumber", "CardType", "NameOnCard", "PostalCode", "Email", "ExpirationDate", "CVV", "Common"],
			properties: {
				MemberId: {
					bsonType: "string",
					description: "MemberId is from the MEMBERS collection"
				},
				CardNumber: {
					bsonType: "string",
					minLength: 4,
					maxLength: 4,
					description: "Last 4 digits of CC is required"
				},
				CardType: {
					bsonType: "string",
					enum: ["MC","DSC", "AMEX", "PAYPAL"],
					description: "Limited to enum"
				},
				NameOnCard: {
					bsonType: "string",
					minLength: 8,
					maxLength: 64,
					description: "Obviously name on card"
				},
				PostalCode: {
					bsonType: "string",
					minLength: 3,
					maxLength: 12,
					description: "National postal code"
				},
				Email: {
					bsonType: "string",
					maxLength: 64,
					description: "User email - may be different than Member email"
				},
				ExpirationDate: {
					bsonType: "date",
					description: "Card expiration date"
				},
				CVV: {
					bsonType: "string",
					minLength: 3,
					maxLength: 5,
					description: "Card CVV"
				},
#include "CommonDef.inc"
			}
		}
	}
});
db.sysCardInfo.createIndex( 
	{
		"MemberId": 1
	}
);
db.sysCardInfo.insertOne( 
	{
		MemberID: "640914943bb567d97ab19e81",
		CardNumber: "9645",
		CardType: "AMEX",
		NameOnCard: "John Doe",
		PostalCode: "75123",
		Email: "foo@bar.com",
		ExpirationDate: new ISODate("2023-03-09"),
		CVV: "1234",
#include "CommonConst.inc"
	}
);
db.sysCardInfo.find();
