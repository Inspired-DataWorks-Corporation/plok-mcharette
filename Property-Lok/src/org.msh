db.org.drop();
db.createCollection('org', {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			description: QUOTE(VERSION),
			properties: {
				MemberId: {
					bsonType: "string",
					description: "required, from Member form",
				},
				"CompanyName": {
					bsonType: "string",
					minLength: 4,
					maxLength: 64,
					description: "CompanyName is required"
				},
				CompanyType: {
					bsonType: "string",
					enum: ["Commercial", "Pawn Shop", "Law Enforcement"],
					description: "CompanyType is required. Limited to enum"
				},
				BrandLogoURL: {
					bsonType: "string",
					minLength: 8,
					maxLength:  128,
					description: "BrandLogo is required. png, gif, jpg 400x400px "
				},
				CompanyWebsiteURL: {
					bsonType: "string",
					maxLength: 128,
					description: "CompanyWebsiteURL must be a valid URI string. Needs further validation"
				},
				CompanyAlias: {
					bsonType: "array",
					items: {
						bsonType: "string",
						minLength: 4,
						maxLength: 128
					},
					description: "CompanyAlias ia an array of strings to contain multiple aliases"
				},
				OwnerFirstname: {
					bsonType: "string",
 					minLength: 2,
					maxLength: 64,
					description: "OwnerFirstname is required. Default from MemberId"
				},
				OwnerLastname: {
					bsonType: "string",
					minLength: 2,
					maxLength: 128,
					description: "OwnerLastname is required. Default from MemberId"
				},
				OwnerEmail: {
					bsonType: "string",
					minLength: 8,
					maxLength: 128,
					description: "OwnerEmail is required. Default from MemberId"
				},
				CompanyAddress: {
					bsonType: "array",
					items: {
						bsonType: "string"
					},
					description: "Array of addresses strings, perhaps csv. Required."
				},
				CompanyMembers: {
					bsonType: "array",
					items: {
						bsonType: "string"
					},
					description: "array of MemberIds - members of this Company",
				},
				CompanyLocations: {
					bsonType: "array",
					items: {
						bsonType: "string",
					},
					description: "CompanyLocations is for multiple locatiosn such as states, cities"
				},
				CompanyDescription: {
					bsonType: "string",
					minLength: 4,
					maxLength: 4028,
					description: "array of strings with descriptions and/or tags"
				},
				TemplateCss: {
					bsonType: "string",
					enum: ["Member", "Commercial", "Pawn Shop", "Law Enforcement"],
					description: "Template is limited to enum"
				},
				MemberId: {
					bsonType: 'string',
					description: 'required, belongsTo Member form'
				},
#include "CommonDef.inc"
			}
		}
	}
});

db.org.insertOne(
	{
	CompanyName: 'Property-Lok',
    CompanyType: 'Commercial',
    BrandLogoURL: 'http://brandlogo.com',
    CompanyWebsiteURL: 'http://my.companyURL.com',
    CompanyAlias: [ 'Property-Lok LLC', 'Property-Lok Inc' ],
    OwnerFirstname: ' Mark',
    OwnerLastname: 'Charette',
    OwnerEmail: 'dont@reachme.com',
    CompanyAddress: [ '1 pleasant place, Sunnyvale', 'somewhere else' ],
    CompanyMembers: [ '640914943bb567d97ab19e81', '640914943bb567d97ab19e82' ],
    CompanyLocations: [ 'Boston, MA', 'Vancouver, WA' ],
    CompanyDescription: 'Dummy description1',
    TemplateCss: 'Member',
	MemberId: "640914943bb567d97ab19e81",
	#include "CommonConst.inc"   
});

db.org.insertOne(
{
    CompanyName: 'API Company two',
    CompanyType: 'Commercial',
    BrandLogoURL: 'http://brandlogo.com',
    CompanyWebsiteURL: 'http://my.companyURL.com',
    CompanyAlias: [ 'Inc name' ],
    OwnerFirstname: ' Drew',
    OwnerLastname: 'Anderson',
    OwnerEmail: 'drew@drew.com',
    CompanyAddress: [ '231 Main street, Los Gatos', '123 Bar Valley Cabin' ],
    CompanyMembers: [ "640914943bb567d97ab19e81" ],
    CompanyLocations: [ 'Los Gatos, CA', 'San Jose, CA' ],
    CompanyDescription: 'Company description ',
    TemplateCss: 'Member',
    MemberId: "645693f5f875fe1a1c346f0d",
	Common: 
	{ 
      Created: "2023-05-24T16:17:01.052Z",
      CreatedBy: 'APIDrewAnderson',
      Updated: "2023-05-24T16:17:01.052Z",
      UpdatedBy: 'APIdrewanderson',
      Active: true,
      Notes: 'API Insert 2 Test note'
	},
});

