db.org.drop();
db.createCollection('org', {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			description: QUOTE(VERSION),
			required: ["MemberId", "CompanyName", "CompanyType", "BrandLogoURL", "OwnerFirstname", "OwnerLastname", "OwnerEmail", 
				"CompanyAddress", "Common"],
			properties: {
				MemberId: {
					bsonType: "string",
					description: "required, from Member form",
				},
				"CompanyName": {
					bsonType: "string",
					minLength: 4,
					maxLength: 64,
					description: "CompanyName is required"
				},
				CompanyType: {
					bsonType: "string",
					enum: ["Commercial", "Pawn Shop", "Law Enforcement"],
					description: "CompanyType is required. Limited to enum"
				},
				BrandLogoURL: {
					bsonType: "string",
					minLength: 8,
					maxLength:  128,
					description: "BrandLogo is required. png, gif, jpg 400x400px "
				},
				CompanyWebsiteURL: {
					bsonType: "string",
					minLength: 4,
					maxLength: 128,
					description: "CompanyWebsiteURL must be a valid URI string. Needs further validation"
				},
				CompanyAlias: {
					bsonType: "array",
					items: {
						bsonType: "string",
						minLength: 4,
						maxLength: 128
					},
					description: "CompanyAlias ia an array of strings to contain multiple aliases"
				},
				OwnerFirstname: {
					bsonType: "string",
 					minLength: 2,
					maxLength: 64,
					description: "OwnerFirstname is required. Default rom MemberId"
				},
				OwnerLastname: {
					bsonType: "string",
					minLength: 2,
					maxLength: 128,
					description: "OwnerLastname is required. Default from MemberId"
				},
				OwnerEmail: {
					bsonType: "string",
					minLength: 8,
					maxLength: 128,
					description: "OwnerEmail is required. Default from MemberId"
				},
				CompanyAddress: {
					bsonType: "array",
					items: {
						bsonType: "string"
					},
					description: "Array of addresses strings, perhaps csv. Required."
				},
				CompanyMembers: {
					bsonType: "array",
					items: {
						bsonType: "string"
					},
					description: "array of MemberIds - members of this Company",
				},
				CompanyLocations: {
					bsonType: "array",
					items: {
						bsonType: "string",
					},
					description: "CompanyLocations is for multiple locatiosn such as states, cities"
				},
				CompanyDescription: {
					bsonType: "array",
					items: {
						bsonType: "string",
						minLength: 4,
						maxLength: 4028,
					},
					description: "array of strings with descriptions and/or tags",
				},
				TemplateCss: {
					bsonType: "string",
					enum: ["Member", "Commercial", "Pawn Shop", "Law Enforcement"],
					description: "Template is limited to enum"
				},
#include "CommonDef.inc"
			}
		}
	}
});

db.org.insertOne(
	{
		MemberId: "640914943bb567d97ab19e81",
		CompanyName: "Property-Lok",
		CompanyType: "Commercial",
		BrandLogoURL: "http://brandlogo.com",
		CompanyWebsiteURL: "http://my.companyURL.com",
		CompanyAlias: ["Property-Lok LLC", "Property-Lok Inc"],
		OwnerFirstname: " Mark",
		OwnerLastname: "Charette",
		OwnerEmail: "dont@reachme.com",
		CompanyAddress: ["Address 1", "Address 2"],
		CompanyMembers: ["640914943bb567d97ab19e81"],
		CompanyLocations: ["Boston, MA", "Vancouver, WA"],
		CompanyDescription: ["Dummy description1", "Dummy description2"],
		TemplateCss: "Member",
#include "CommonConst.inc"
	}
);
db.org.find();
