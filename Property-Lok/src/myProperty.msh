db.myProperty.drop();
db.createCollection('myProperty', {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			description: QUOTE(VERSION),
			required: ["MemberId", "PropertyLockerName", "OwnerFirstname","OwnerLastname", "Common"],
				
			properties: {
				MemberId: {
					bsonType: "string",
					description: "MemberId @belongsTo the customUser/Member collection"
				},
				PropertyLockerName: {
					bsonType: "string",
					minLength: 4,
					maxLength: 64,
					description: " PropertyLockerName HAS to BE unique"
				},
				PropertyLockerDescription: {
					bsonType: "string",
					minLength: 5,
					maxLength: 512,
					description: "Property Locker , but there is only 1 Property Locker per Member or Org"
				},
				PropertyLockerThumbnail: {
					bsonType: "string",
					minLength: 5,
					maxLength: 256,
					description: "Property Locker Thumbnail URL"
				},
				PropertyLockerTags: {
					bsonType: "array",
					items: {
						bsonType: "string",
						minLength: 4,
						maxLength: 512,
						description: "Property Locker tags for search"
					}
				},
				OwnerFirstname: {
					bsonType: "string",
 					minLength: 2,
					maxLength: 64,
					description: "Property Locker Owner Name"
				},
				OwnerLastname: {
					bsonType: "string",
					minLength: 2,
					maxLength: 128,
					description: "Property Locker Owner Name"
				},
#include "CommonDef.inc"
			}
		}
	}
});

db.myProperty.createIndex( 
	{
		"PropertyLockerName": 1
	},
	{
		unique: true
	}
);

db.myProperty.insertOne(
	{
		MemberId: "645693f5f875fe1a1c346f0d",
		PropertyLockerName: "A property locker",
		PropertyLockerDescription: "Property locker description",
		PropertyLockerThumbnail: "http://animage.com",
		PropertyLockerTags: ["Tag1", "Tag2"],
		OwnerFirstname: "Gloria",
		OwnerLastname: "Rivera de Haro",
#include "CommonConst.inc"
	}
);
db.myProperty.find();
