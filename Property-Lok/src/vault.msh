db.vault.drop();
db.createCollection('vault', {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			description: QUOTE(VERSION),
			required: ["PropertyStorageCode", "EnablePropertyStorageCode", "PropertyName", "PropertySKU", 
			"SerialVIN","MakeManufacturer", "ModelNumber",  "PropertyDescription", "Metadata", "PropertyStatus", 
			"PropertyGeolocation", "Common"],
			properties: {
				PropertyLockerID: {
					bsonType: "string",
					description: "PropertyLocker Parent"
				},
				PropertyStorageCode: {
					bsonType: "string",
					minLength: 4,
					maxLength: 128,
					description: "PropertyStorageCode is a one way HASH, ALWAYS generated if Enabled or not"
				},
				EnablePropertyStorageCode: {
					bsonType: "bool",
					description: "Enable/disable PSC to lock and unlock vault item, default is FALSE - no PSC required to unlock the item"
				},
				PropertyName: {
				    bsonType: "string",
					minLength: 4,
					maxLength: 128,
					description: "Customer supplied name"
				},
				PropertySKU: {
					bsonType: "string",
					minLength: 4,
					maxLength: 24,
					description: "Property SKU is a system generated SKU mnemonic "
				},
				SerialVIN: {
					bsonType: "string",
					minLength: 4,
					maxLength: 64,
					description: "Property SerialVIN is a system generated SKU mnemonic"
				},
				MakeManufacturer: {
					bsonType: "string",
					minLength: 4,
					maxLength: 36,
					description: "Property Make Manufacturer is a system generated SKU mnemonic"
				},
				ModelNumber: {
					bsonType: "string",
					minLength: 4,
					maxLength: 36,
					description: "Property Model Number is a system generated SKU mnemonic"
				},
				PropertyDescription: {
					bsonType: "string",
					minLength: 4,
					maxLength: 1024,
					description: "Property Property Description is up to the user"
				},
				Files: {
					bsonType: "array",
					items: {
						bsonType: "string",
						minLength: 4,
						maxLength: 512,
						description: "URLs of this vaults asset Files in S3 bucket"
					}
				},
				Metadata: {
					bsonType: "array",
					items: {
						bsonType: "string",
						minLength: 4,
						maxLength: 512,
						description: "File Metadata array - join with Files array above ^^"
					}
				},
				Thumbnails: {
					bsonType: "array",
					items: {
						bsonType: "string",
						minLength: 4,
						maxLength: 512,
						description: "Vault Assets - Thumbnail Pics, Certificates, etc. Defaulted to an image representing the file type, but users can also upload their own images with the file"
					}
				},
				Tags: {
					bsonType: "array",
					items: {
						bsonType: "string",
						minLength: 4,
						maxLength: 512,
						description: "Array of tags"
					}
				},
				PropertyStatus: {
					bsonType: "string",
					enum: ["Stored", "Locked", "Stolen", "For Sale", "Transferred", "Recovered", "Unrecovered"],
					description: "NOTE - Stored state follows PSC enabled: if unlocked set to Stored,Locked if locked,set to 'Locked",
				},
				PropertyGeolocation: {
					bsonType: "string",
					maxLength: 512,
					description: "Vault Geolocation is the location the of the property when created and string formatted as latitude, longitude: One for each vault."    
				},
				DescriptorCategory: {		
					bsonType: "string",
					maxLength: 32,
					description: "Lookup from SYS_CATEGORIES"
				},
				AdditionalInformation: {
					bsonType: "string",
					maxLength: 256,
					description: "AdditionalInformation is User generated, maximum 256 chars"
				},
				PurchaseDateLocation: {
					bsonType: "string",
					maxLength: 64,
				},
				AppraisalOrPurchasePrice: {
					bsonType: "number",
					minimum: 0.0,
					maximum: 999999.99
				},
				SalesReceptURL: {
					bsonType: "string",
					minLength: 8,
					maxLength: 128
				},
#include "CommonDef.inc"
			}
		}
	}
});

db.vault.insertOne(
	{
		PropertyLockerID: "0000-0000-0000-0000-0000-0000",
		PropertyStorageCode: "HASH OF Something",
		EnablePropertyStorageCode: false,
		PropertyName: "A rembrandt",
		PropertySKU: "deadbeef",
		SerialVIN: "0000001",
		MakeManufacturer: "Rembrandt",
		ModelNumber: "A made up number",
		PropertyDescription: "A rembrandt copy",
		Files: ["file 1", "File 2" ],
		Metadata: ["Meta 1", "Meta2"],
		Thumbnails: ["thumb1", "thumb2"],
		Tags: ["Tag 1", "Tag 2"],
		PropertyStatus: "Lost",
		PropertyGeolocation: "20.65744, -103.39393",
		DescriptorCategory: "Art",
		AdditionalInformation: "Another fake art",
		PurchaseDateLocation: "5/2/22 at home",
		AppraisalOrPurchasePrice: 50000,
		PropertyStatus: "Stored",
		salesReceiptURL: "a valid URL",
#include "CommonConst.inc"
	}
);
db.vault.find();

