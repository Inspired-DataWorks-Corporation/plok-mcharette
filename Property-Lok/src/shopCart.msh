db.shopCart.drop();
db.createCollection('shopCart', {
	validator: {
		$jsonSchema: {
			bsonType: "object",
			description: QUOTE(VERSION),
			required: ["MemberId", "ProductId", "SKU", "Description", "Price", "PaymentMethod", "Common"],
			properties: {
				MemberId: {
					bsonType: "string",
					description: "MemberId is from the Members collection"
				},
				ProductId: {
					bsonType: "string",
					description: "ProductId is from the SYSProductId collection"
				},
 				SKU: {
					bsonType: "array",
					items: {
						bsonType: "string",
						maxLength: 128,
						description: "SKU from the SYSProduct lookup collection"
					}
				},				
				Description: {
					bsonType: "string",
					maxLength: 512,
					description: "Description is from the PRODUCT collection, overridable"
				},
				Price: {
					bsonType: "number",
					minimum: 0.0,
					maximum: 99999.99,
					description: "Price is required"
				},
				PaymentMethod: {
					bsonType: "string",
					enum: ["VISA", "MC", "ACH"],
					description: "PaymentMethod is an enum and is required. Driven by Stripe"
				},
 				ProductPic: {
					bsonType: "string",
					minLength: 8,
					maxLength: 128,
					description: "URL of product picture"
				},
				ProductKeywords: {
					bsonType: "array",
					items: {
						bsonType: "string",
						description: "Keywords for lookup"
					}
				},
#include "CommonDef.inc"
			}
		}
	}
});

db.shopCart.insertOne(
	{
		MemberId: "640914943bb567d97ab19e81",
		ProductId: "6409194a3bb567d97ab19e84",
		SKU: ["SKU1", "SKU2"],
		Description: "Product Description",
		Price: 12345.67,
		PaymentMethod: "ACH",
		ProductPic: "https://a secure pic",
		ProductKeywords: ['ah one', 'and ah two'],
#include "CommonConst.inc"
	}
);
db.shopCart.find();
